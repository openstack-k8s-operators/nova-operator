[DEFAULT]
# concurrent live migrations are more likely to fail and are slower
# overall then serializing live migrations so set this to 1 explictly
max_concurrent_live_migrations=1
state_path = /var/lib/nova
allow_resize_to_same_host = true
# enable log rotation in oslo config by default
max_logfile_count=5
max_logfile_size_mb=50
log_rotation_type=size
{{if (index . "log_file") }}
log_file = {{ .log_file }}
{{end}}
debug=true
{{if eq .service_name "nova-external-compute" "nova-compute"}}
compute_driver = {{ .compute_driver }}
{{if eq .compute_driver "ironic.IronicDriver"}}
reserved_host_memory_mb = 0
{{end}}
{{ if (index . "enable_ceilometer") }}
instance_usage_audit = true
instance_usage_audit_period = hour
{{end}}
# ensure safe defaults for new hosts
initial_cpu_allocation_ratio=4.0
initial_ram_allocation_ratio=1.0
initial_disk_allocation_ratio=0.9
{{end}}
{{/*using a config drive will void issues with ovn and metadata*/}}
force_config_drive=True
{{ if (index . "transport_url") }}
transport_url={{.transport_url}}
{{end}}

{{if eq .service_name "nova-api"}}
# scaling should be done by running more pods
osapi_compute_workers=1
enabled_apis=osapi_compute
{{else if eq .service_name "nova-metadata"}}
# scaling should be done by running more pods
metadata_workers=1
enabled_apis=metadata
{{end}}

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[oslo_messaging_rabbit]
amqp_durable_queues=false
amqp_auto_delete=false
# we should consider using quorum queues instead
# rabbit_quorum_queue=true
{{/*we might just want to make this always false*/}}
{{ if eq .service_name "nova-api"}}
# We cannot set this to true while is
# https://review.opendev.org/c/openstack/oslo.log/+/852443 is not used in the
# nova-api image otherwise logging from the heartbeat thread will cause hangs.
heartbeat_in_pthread=false
{{else}}
heartbeat_in_pthread=false
{{end}}

{{ if eq .service_name "nova-api"}}
[oslo_policy]
enforce_new_defaults=false
{{end}}

{{ if eq .service_name "nova-conductor"}}
[conductor]
# scaling should be done by running more pods
workers=1
{{end}}

{{ if eq .service_name "nova-scheduler"}}
[filter_scheduler]
available_filters = nova.scheduler.filters.all_filters
enabled_filters = ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter,SameHostFilter,DifferentHostFilter,PciPassthroughFilter,NUMATopologyFilter
# until we can disabel upcalls we can't turn this off by default
# track_instance_changes = false
shuffle_best_same_weighed_hosts = true

[scheduler]
max_attempts = 10
# scaling should be done by running more pods
workers = 1
limit_tenants_to_placement_aggregate=true
placement_aggregate_required_for_tenants=false
query_placement_for_routed_network_aggregates=true
query_placement_for_availability_zone=true
query_placement_for_image_type_support=true
enable_isolated_aggregate_filtering=true
image_metadata_prefilter=true

{{end}}

{{if eq .service_name "nova-novncproxy"}}
[console]
ssl_minimum_version=tlsv1_3
{{end}}

{{if eq .service_name "nova-api" "nova-metadata"}}
[api]
auth_strategy = keystone
{{ if eq .service_name "nova-metadata"}}
local_metadata_per_cell = {{ .local_metadata_per_cell }}
{{end}}
[oslo_middleware]
enable_proxy_headers_parsing = True
[wsgi]
api_paste_config = /etc/nova/api-paste.ini
{{end}}

[oslo_messaging_notifications]
{{ if (index . "nova_enabled_notification") }}
transport_url =  {{ .nova_cell_notify_transport_url }}
driver = messagingv2
notification_format=versioned
{{ else }}
driver = noop
{{end}}

{{if (index . "enable_ceilometer") }}
[notifications]
notify_on_state_change = vm_and_task_state
{{ end }}

{{ if eq .service_name "nova-external-compute" "nova-novncproxy" "nova-compute"}}
[vnc]
{{if eq .service_name "nova-compute"}}
# TODO(ksambor) in tripleo we disable vnc console
enabled = False
{{else}}
enabled = True
{{end}}
novncproxy_host = {{ if (index . "novncproxy_service_host") }} {{ .novncproxy_service_host }} {{else}}"::0"{{ end }}
novncproxy_port = {{ if (index . "nova_novncproxy_listen_port") }}{{ .nova_novncproxy_listen_port }} {{else}}6080{{ end }}
server_listen = {{ if (index . "novncproxy_service_host") }}{{ .novncproxy_service_host }} {{else}}"::0"{{ end }}
{{ if eq .service_name "nova-external-compute"}}
{{/* https://docs.openstack.org/oslo.config/latest/configuration/format.html#substitution    */}}
# note we may want to use console_host instead of my_ip however it wont be resolved via
# dns currently so we need to use my_ip for now.
# https://docs.openstack.org/nova/latest/configuration/config.html#DEFAULT.console_host
server_proxyclient_address = "$my_ip"
{{if (index . "novncproxy_base_url")}}
novncproxy_base_url = {{ .novncproxy_base_url }}
{{ end }}
{{ end }}
{{ end }}

[cache]
# always enable caching
enabled = True
{{if (index . "memcache_servers")}}
# on contoler we prefer to use memcache when its deployed
backend = oslo_cache.memcache_pool
memcache_servers = {{range .memcache_servers -}}{{.address}}:{{.port}},{{- end}}
{{else}}
# on compute nodes or where memcache is not deployed we should use an in memory
# dict cache
backend = oslo_cache.dict
{{end}}

[workarounds]
disable_fallback_pcpu_query=true
{{ if eq .service_name "nova-external-compute"}}
enable_qemu_monitor_announce_self=true
reserve_disk_resource_for_image_cache=true
{{end}}

{{ if eq .service_name "nova-external-compute"}}
[libvirt]
live_migration_permit_post_copy=true
live_migration_permit_auto_converge=true
live_migration_timeout_action=force_complete
cpu_mode=host-model
hw_machine_type=x86_64=q35
sysinfo_serial=unique
mem_stats_period_seconds=0
num_pcie_ports=24
images_type=qcow2
rx_queue_size=512
tx_queue_size=512
swtpm_enabled=True
{{end}}

{{if (index . "cell_db_address")}}
[database]
connection = mysql+pymysql://{{ .cell_db_user }}:{{ .cell_db_password}}@{{ .cell_db_address }}/{{ .cell_db_name }}
{{end}}


{{if (index . "api_db_address")}}
[api_database]
connection = mysql+pymysql://{{ .api_db_user }}:{{ .api_db_password }}@{{ .api_db_address }}/{{ .api_db_name }}
{{end}}

[keystone_authtoken]
www_authenticate_uri = {{ .keystone_internal_url }}
auth_url =  {{ .keystone_internal_url }}
auth_type = password
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
cafile = {{ .openstack_cacert }}
region_name = {{ .openstack_region_name }}
# This is part of hardening related to CVE-2023-2088
# https://docs.openstack.org/nova/latest/configuration/config.html#keystone_authtoken.service_token_roles_required
# when enabled the service token user must have the service role to be considered valid.
service_token_roles_required = true

[placement]
auth_url =  {{ .keystone_internal_url }}
auth_type = password
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
cafile = {{ .openstack_cacert }}
region_name = {{ .openstack_region_name }}
valid_interfaces = internal

[glance]
auth_url = {{ .keystone_internal_url }}
auth_type = password
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
cafile = {{ .openstack_cacert }}
region_name = {{ .openstack_region_name }}
valid_interfaces = internal
{{if (index . "debug") }}debug=true{{end}}

[neutron]
auth_url = {{ .keystone_internal_url }}
auth_type = password
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
cafile = {{ .openstack_cacert }}
region_name = {{ .openstack_region_name }}
valid_interfaces = internal
{{if eq .service_name "nova-metadata"}}
metadata_proxy_shared_secret = {{ .metadata_secret }}
{{end}}
service_metadata_proxy = true

[cinder]
auth_url = {{ .keystone_internal_url }}
auth_type = password
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
cafile = {{ .openstack_cacert }}
region_name = {{ .openstack_region_name }}
catalog_info = volumev3:cinderv3:internalURL

{{ if eq .service_name "nova-compute"}}
[ironic]
auth_type = password
auth_url = {{ .keystone_internal_url }}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
{{ end }}

[service_user]
send_service_user_token = true
auth_url = {{ .keystone_internal_url }}
auth_type = password
project_domain_name = {{ .default_project_domain }}
user_domain_name = {{ .default_user_domain}}
project_name = service
username = {{ .nova_keystone_user }}
password = {{ .nova_keystone_password }}
cafile = {{ .openstack_cacert }}
