apiVersion: nova.openstack.org/v1beta1
kind: Nova
metadata:
  name: nova
spec:
  # This is the name of the single MariaDB CR we deploy today
  # The Service is labelled with app=mariadb,cr=mariadb-<MariaDB.Name>
  apiDatabaseInstance: openstack
  apiDatabaseAccount: nova-api
  # This is the name of the single RabbitMqCluster CR we deploy today
  # The Service is labelled with
  # app.kubernetes.io/component=rabbitmq, app.kubernetes.io/name=<RabbitMqCluster.Name>
  apiMessageBusInstance: rabbitmq
  # This is the name of the KeystoneAPI CR we deploy today
  # The Service is labelled with service=keystone,internal=true
  keystoneInstance: keystone
  # This is the name of a Secret having fields according to the
  # passwordSelectors directly below and the passwordSelectors in each
  # NovaCellSpec instances
  # Today all the passwords are stored in the same Secret object named
  # osp-secret, but the openstack operator could create a nova specific
  # secret and pass it here in the future.
  secret: osp-secret
  apiServiceTemplate:
    customServiceConfig: |
      # service config customization
      [DEFAULT]
      debug=True
    defaultConfigOverwrite:
      policy.yaml: |
        # my custom policy configuration
    nodeSelector: {}
  schedulerServiceTemplate:
    customServiceConfig: |
      # service config customization
      [DEFAULT]
      debug=True
    nodeSelector: {}
  metadataServiceTemplate:
    customServiceConfig: |
      # service config customization
      [DEFAULT]
      debug=True
    defaultConfigOverwrite:
      api-paste.ini: |
        # my custom api paste config
    nodeSelector: {}
  cellTemplates:
    cell0:
      cellDatabaseInstance: openstack
      cellDatabaseAccount: nova-cell0
      cellMessageBusInstance: rabbitmq
      # cell0 always needs access to the API DB and MQ as it hosts the super
      # conductor. It will inherit the API DB and MQ access from the Nova CR
      # that creates it.
      hasAPIAccess: true
      conductorServiceTemplate:
        customServiceConfig: |
          # service config customization
          [DEFAULT]
          debug=True
        nodeSelector: {}
    cell1:
      cellDatabaseInstance: mariadb-cell1
      cellDatabaseAccount: nova-cell1
      cellMessageBusInstance: rabbitmq-cell1
      # cell1 will have upcalls support. It will inherit the API DB and MQ
      # access from the Nova CR that creates it.
      hasAPIAccess: true
      conductorServiceTemplate:
        customServiceConfig: |
          # service config customization
          [DEFAULT]
          debug=True
        nodeSelector: {}
      noVNCProxyServiceTemplate:
        customServiceConfig: |
          # service config customization
          [DEFAULT]
          debug=True
        nodeSelector: {}
    cell2:
      cellDatabaseInstance: mariadb-cell2
      cellDatabaseAccount: nova-cell2
      cellMessageBusInstance: rabbitmq-cell2
      # cell2 will not get the API DB and MQ connection info from the Nova CR
      hasAPIAccess: false
      conductorServiceTemplate:
        customServiceConfig: |
          # service config customization
          [DEFAULT]
          debug=True
        nodeSelector: {}
      noVNCProxyServiceTemplate:
        customServiceConfig: |
          # service config customization
          [DEFAULT]
          debug=True
        nodeSelector: {}
