---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: novaexternalcomputes.nova.openstack.org
spec:
  group: nova.openstack.org
  names:
    kind: NovaExternalCompute
    listKind: NovaExternalComputeList
    plural: novaexternalcomputes
    singular: novaexternalcompute
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NovaExternalCompute is the Schema for the novaexternalcomputes
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NovaExternalComputeSpec defines the desired state of NovaExternalCompute
            properties:
              ansibleEEContainerImage:
                description: AnsibleEEContainerImage is the Container Image URL for
                  the ansible execution environment (will be set to environmental
                  default if empty)
                type: string
              cellName:
                default: cell1
                description: CellName defines the name of the cell this compute should
                  be connected to
                type: string
              customServiceConfig:
                description: CustomServiceConfig - customize the service config using
                  this parameter to change service defaults, or overwrite rendered
                  information using raw OpenStack config format. The content gets
                  added to to /etc/<service>/<service>.conf.d directory as custom.conf
                  file.
                type: string
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: ConfigOverwrite - interface to overwrite default config
                  files like e.g. logging.conf But can also be used to add additional
                  files. Those get added to the service config dir in /etc/<service>
                  .
                type: object
              deploy:
                default: true
                description: Deploy true means the nova-operator is allowed to do
                  changes on the external compute node if necessary. If set to false
                  then the operator will only generate the pre-requisite data (e.g.
                  config maps) but does not do any modification on the compute node
                  itself.
                type: boolean
              inventoryConfigMapName:
                description: InventoryConfigMapName is the name of the k8s config
                  map that contains the ansible inventory information for this node
                type: string
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              novaComputeContainerImage:
                description: NovaComputeContainerImage is the Container Image URL
                  for the nova-compute container (will be set to environmental default
                  if empty)
                type: string
              novaInstance:
                default: nova
                description: NovaInstance is the name of the Nova CR that represents
                  the deployment this compute belongs to
                type: string
              novaLibvirtContainerImage:
                description: NovaLibvirtContainerImage is the Container Image URL
                  for the nova-libvirt container (will be set to environmental default
                  if empty)
                type: string
              sshKeySecretName:
                description: SSHKeySecretName is the name of the k8s Secret that contains
                  the ssh keys to access the node
                type: string
            required:
            - inventoryConfigMapName
            - sshKeySecretName
            type: object
          status:
            description: NovaExternalComputeStatus defines the observed state of NovaExternalCompute
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
