---
cifmw_install_yamls_vars:
  BMO_SETUP: false
  INSTALL_CERT_MANAGER: false

cifmw_edpm_prepare_skip_crc_storage_creation: true
# as we scale the openstack services to 3 replicas we need more PVs
cifmw_cls_pv_count: 20

cifmw_services_swift_enabled: false
pre_deploy:
  - name: 61 HCI pre deploy kustomizations
    type: playbook
    source: control_plane_hci_pre_deploy.yml

# note by default the source for the playbook specified
# in the hooks is relative to
# https://github.com/openstack-k8s-operators/ci-framework/tree/main/hooks/playbooks
# if you want to use a different source you can use the full path on the ansible controller
post_deploy:
  - name: 71 Kustomize control plane to scale openstack services
    type: playbook
    source: "{{ ansible_user_dir }}/{{ zuul.projects['github.com/openstack-k8s-operators/nova-operator'].src_dir }}/ci/nova-operator-tempest-multinode-ceph/control_plane_hook.yaml"
  - name: 81 Kustomize OpenStack CR with Ceph
    type: playbook
    source: control_plane_ceph_backends.yml
  - name: 82 Kustomize and update Control Plane
    type: playbook
    source: control_plane_kustomize_deploy.yml

# we can use this hook to create flavors, images, etc
# before we execute tempest simiilar to how we would use
# local.sh in devstack based jobs
pre_tests:
  - name: 01 Create cinder multiattach volume type
    type: playbook
    source: cinder_multiattach_volume_type.yml


cifmw_run_tests: true
cifmw_tempest_container: openstack-tempest-extras
# we do not want the ci framework trying to enable any
# tempest groups by default we will manage all tempest execution
# via the job definition.
cifmw_tempest_default_groups: []
