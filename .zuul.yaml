---
- job:
    name: nova-operator-content-provider
    parent: content-provider-base
    description: |
      This job builds the nova-operator and provides it to child jobs
      It also rebuilds the openstack-operator using the updated nova operator.
    provides:
      - "nova-operator-content"
    vars:
      cifmw_operator_build_org: openstack-k8s-operators
      cifmw_operator_build_operators:
        - name: "openstack-operator"
          src: "~/src/github.com/{{ cifmw_operator_build_org }}/openstack-operator"
          image_base: nova

- job:
    name: nova-operator-base
    description: |
      This is the base job for all nova-operator tests that will deploy
      openstack. the base job does not deploy openstack but it does use
      the nova-operator-content-provider job to provide a registry with
      built operators and installs them on a crc environment. Child jobs
      should take this deployed crc and use the installed operators to
      deploy openstack and then test it. This job will fetch the job
      output directory so child jobs can just add additional logs to that
      in there post-playbooks.
    parent: cifmw-podified-multinode-edpm-base-crc
    abstract: true
    attempts: 1
    dependencies: ["nova-operator-content-provider"]
    required-projects:
      - github.com/openstack-k8s-operators/ci-framework
      - github.com/openstack-k8s-operators/install_yamls
    requires:
      - "nova-operator-content"
    roles:
      - zuul: github.com/openstack-k8s-operators/ci-framework
    pre-run:
      - ci/nova-operator-base/playbooks/pre-wrapper.yaml
    post-run:
      - ci/nova-operator-base/playbooks/collect-logs.yaml

- job:
    name: nova-operator-kuttl
    parent:  nova-operator-base
    dependencies: ["nova-operator-content-provider"]
    roles:
      - zuul: github.com/openstack-k8s-operators/ci-framework
    description: |
      This job deploy a basic "Compute Starter Kit" topology
      https://www.openstack.org/software/sample-configs#compute-starter-kit
      that is the minium set of openstack services required to boot a vm.
    requires:
      - "nova-operator-content"
    pre-run:
      - ci/nova-operator-kuttl/playbooks/deploy-deps.yaml
    run:
      - ci/nova-operator-kuttl/playbooks/run-kuttl.yaml
    nodeset: centos-9-medium-crc-extracted-2-30-0-3xl
    vars:
      collection_namespace_override: "nova-kuttl-default"
      zuul_log_collection: true
    extra-vars:
      crc_ci_bootstrap_networking:
        networks:
          default:
            range: 192.168.122.0/24
            mtu: 1500
          internal-api:
            vlan: 20
            range: 172.17.0.0/24
          storage:
            vlan: 21
            range: 172.18.0.0/24
          tenant:
            vlan: 22
            range: 172.19.0.0/24
        instances:
          controller:
            networks:
              default:
                ip: 192.168.122.11
          crc:
            networks:
              default:
                ip: 192.168.122.10
              internal-api:
                ip: 172.17.0.5
              storage:
                ip: 172.18.0.5
              tenant:
                ip: 172.19.0.5
- job:
    name: nova-operator-tempest-multinode
    parent: podified-multinode-edpm-deployment-crc-3comp
    dependencies: ["nova-operator-content-provider"]
    vars:
      cifmw_run_test_role: test_operator
      cifmw_test_operator_concurrency: 4
      cifmw_test_operator_timeout: 7200
      # avoid using default test_operator exclude list
      cifmw_test_operator_tempest_tests_exclude_override_scenario: false
      # NOTE(gibi): identity.v3_endpoint_type override is a WA to force the
      # publicURL as otherwise tempest gets configured with adminURL and that
      # causes test instability.
      # NOTE(efoley): swift and cinder are not disabled, we're just telling
      # tempest that they're unavailable so that it'll skip the tests that
      # require cinder or swift
      cifmw_tempest_tempestconf_config:
          overrides: |
            compute.min_compute_nodes 3
            compute-feature-enabled.vnc_console true
            compute-feature-enabled.stable_rescue true
            compute-feature-enabled.hostname_fqdn_sanitization true
            compute-feature-enabled.live_migration true
            compute-feature-enabled.block_migration_for_live_migration true
            validation.run_validation true
            identity.v3_endpoint_type public
            service_available.swift false
            service_available.cinder false
      cifmw_test_operator_tempest_include_list: |
          tempest.api.compute
          tempest.scenario
      # TODO(samborka): remove
      # tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes
      # once we have a running barbican
      # Note: We don't have shared local storage so skipping
      # tempest.api.compute.admin.test_live_migration.LiveMigrationTest.test_live_migration_with_trunk
      # NOTE: Need to check
      # tempest.api.compute.admin.test_auto_allocate_network.AutoAllocateNetworkTest.test_server_multi_create_auto_allocate
      # TODO(sean-k-mooney): fix tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_mtu_sized_frames
      # we probably are not configuring the mtu correctly in ci
      cifmw_test_operator_tempest_exclude_list: |
          tempest.api.compute.servers.test_device_tagging
          test_create_server_invalid_bdm_in_2nd_dict
          tempest.scenario.test_minimum_basic.TestMinimumBasicScenario.test_minimum_basic_scenario
          tempest.scenario.test_stamp_pattern
          tempest.api.compute.admin.test_live_migration.LiveMigrationTest.test_live_migration_with_trunk
          tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_live_migration
          tempest.api.compute.admin.test_auto_allocate_network.AutoAllocateNetworkTest.test_server_multi_create_auto_allocate
          tempest.api.compute.servers.test_server_rescue.ServerStableDeviceRescueTestIDE
          tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_mtu_sized_frames
      # We need to use a custom cpu model to allow live migrating between
      # slightly different computes coming from the node pool
      cifmw_edpm_deploy_nova_compute_extra_config: |
        [libvirt]
        cpu_mode = custom
        cpu_models = Nehalem

- project:
    name: openstack-k8s-operators/nova-operator
    github-check:
      jobs:
        - nova-operator-content-provider
        - nova-operator-kuttl
        - nova-operator-tempest-multinode
