---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: novacells.nova.openstack.org
spec:
  group: nova.openstack.org
  names:
    kind: NovaCell
    listKind: NovaCellList
    plural: novacells
    singular: novacell
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NovaCell is the Schema for the novacells API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NovaCellSpec defines the desired state of NovaCell
            properties:
              apiDatabaseHostname:
                description: 'APIDatabaseHostname - hostname to use when accessing
                  the API DB. If not provided then up-calls will be disabled. This
                  filed is Required for cell0. TODO(gibi): Add a webhook to validate
                  cell0 constraint'
                type: string
              apiDatabaseUser:
                default: nova
                description: APIDatabaseUser - username to use when accessing the
                  API DB
                type: string
              cellDatabaseHostname:
                description: CellDatabaseHostname - hostname to use when accessing
                  the cell DB
                type: string
              cellDatabaseUser:
                default: nova
                description: CellDatabaseUser - username to use when accessing the
                  cell DB
                type: string
              cellName:
                description: CellName is the name of the Nova Cell. The value "cell0"
                  has a special meaning. The "cell0" Cell cannot have compute nodes
                  associated and the conductor in this cell acts as the super conductor
                  for all the cells in the deployment.
                type: string
              conductorServiceTemplate:
                description: ConductorServiceTemplate - defines the cell conductor
                  deployment for the cell
                properties:
                  containerImage:
                    description: The service specific Container Image URL (will be
                      set to environmental default if empty)
                    type: string
                  customServiceConfig:
                    description: CustomServiceConfig - customize the service config
                      using this parameter to change service defaults, or overwrite
                      rendered information using raw OpenStack config format. The
                      content gets added to to /etc/<service>/<service>.conf.d directory
                      as custom.conf file.
                    type: string
                  defaultConfigOverwrite:
                    additionalProperties:
                      type: string
                    description: ConfigOverwrite - interface to overwrite default
                      config files like e.g. logging.conf But can also be used to
                      add additional files. Those get added to the service config
                      dir in /etc/<service> .
                    type: object
                  networkAttachments:
                    description: NetworkAttachments is a list of NetworkAttachment
                      resource names to expose the services to the given network
                    items:
                      type: string
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector to target subset of worker nodes running
                      this service. Setting here overrides any global NodeSelector
                      settings within the Nova CR.
                    type: object
                  replicas:
                    default: 1
                    description: Replicas of the service to run
                    format: int32
                    maximum: 32
                    minimum: 0
                    type: integer
                  resources:
                    description: Resources - Compute Resources required by this service
                      (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              debug:
                description: Debug - enable debug for different deploy stages. If
                  an init container is used, it runs and the actual action pod gets
                  started with sleep infinity
                properties:
                  preserveJobs:
                    default: false
                    description: PreserveJobs - do not delete jobs after they finished
                      e.g. to check logs
                    type: boolean
                  stopDBSync:
                    default: false
                    description: 'StopDBSync allows stopping the init container before
                      running db sync to apply the DB schema QUESTION(gibi): Not all
                      CR will run dbsync, should we have per CR Debug struct or keep
                      this generic one and ignore fields in the controller that are
                      not applicable'
                    type: boolean
                  stopService:
                    default: false
                    description: 'StopService allows stopping the service container
                      before staring the openstack service binary QUESTION(gibi):
                      Not all CR will run a service, should we have per CR Debug struct
                      or keep this generic one and ignore fields in the controller
                      that are not applicable'
                    type: boolean
                type: object
              keystoneAuthURL:
                description: KeystoneAuthURL - the URL that the service in the cell
                  can use to talk to keystone
                type: string
              metadataServiceTemplate:
                description: MetadataServiceTemplate - defines the metadata service
                  dedicated for the cell.
                properties:
                  containerImage:
                    description: The service specific Container Image URL (will be
                      set to environmental default if empty)
                    type: string
                  customServiceConfig:
                    description: CustomServiceConfig - customize the service config
                      using this parameter to change service defaults, or overwrite
                      rendered information using raw OpenStack config format. The
                      content gets added to to /etc/<service>/<service>.conf.d directory
                      as custom.conf file.
                    type: string
                  defaultConfigOverwrite:
                    additionalProperties:
                      type: string
                    description: ConfigOverwrite - interface to overwrite default
                      config files like e.g. logging.conf But can also be used to
                      add additional files. Those get added to the service config
                      dir in /etc/<service> .
                    type: object
                  enabled:
                    description: Enabled - Whether NovaMetadata services should be
                      deployed and managed. If it is set to false then the related
                      NovaMetadata CR will be deleted if exists and owned by a higher
                      level nova CR (Nova or NovaCell). If it exist but not owned
                      by a higher level nova CR then the NovaMetadata CR will not
                      be touched. If it is set to true the a NovaMetadata CR will
                      be created. If there is already a manually created NovaMetadata
                      CR with the relevant name then this operator will not try to
                      update that CR, instead the higher level nova CR will be in
                      error state until the manually create NovaMetadata CR is deleted
                      manually.
                    type: boolean
                  networkAttachments:
                    description: NetworkAttachments is a list of NetworkAttachment
                      resource names to expose the services to the given network
                    items:
                      type: string
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector to target subset of worker nodes running
                      this service. Setting here overrides any global NodeSelector
                      settings within the Nova CR.
                    type: object
                  override:
                    description: Override, provides the ability to override the generated
                      manifest of several child resources.
                    properties:
                      service:
                        description: Override configuration for the Service created
                          to serve traffic to the cluster for internal communication.
                        properties:
                          metadata:
                            description: EmbeddedLabelsAnnotations is an embedded
                              subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                              Only labels and annotations are included.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value
                                  map stored with a resource that may be set by external
                                  tools to store and retrieve arbitrary metadata.
                                  They are not queryable and should be preserved when
                                  modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                            type: object
                          spec:
                            description: OverrideServiceSpec is a subset of the fields
                              included in https://pkg.go.dev/k8s.io/api@v0.26.6/core/v1#ServiceSpec
                              Limited to Type, SessionAffinity, LoadBalancerSourceRanges,
                              ExternalName, ExternalTrafficPolicy, SessionAffinityConfig,
                              IPFamilyPolicy, LoadBalancerClass and InternalTrafficPolicy
                            properties:
                              externalName:
                                description: externalName is the external reference
                                  that discovery mechanisms will return as an alias
                                  for this service (e.g. a DNS CNAME record). No proxying
                                  will be involved.  Must be a lowercase RFC-1123
                                  hostname (https://tools.ietf.org/html/rfc1123) and
                                  requires `type` to be "ExternalName".
                                type: string
                              externalTrafficPolicy:
                                description: externalTrafficPolicy describes how nodes
                                  distribute service traffic they receive on one of
                                  the Service's "externally-facing" addresses (NodePorts,
                                  ExternalIPs, and LoadBalancer IPs). If set to "Local",
                                  the proxy will configure the service in a way that
                                  assumes that external load balancers will take care
                                  of balancing the service traffic between nodes,
                                  and so each node will deliver traffic only to the
                                  node-local endpoints of the service, without masquerading
                                  the client source IP. (Traffic mistakenly sent to
                                  a node with no endpoints will be dropped.) The default
                                  value, "Cluster", uses the standard behavior of
                                  routing to all endpoints evenly (possibly modified
                                  by topology and other features). Note that traffic
                                  sent to an External IP or LoadBalancer IP from within
                                  the cluster will always get "Cluster" semantics,
                                  but clients sending to a NodePort from within the
                                  cluster may need to take traffic policy into account
                                  when picking a node.
                                type: string
                              internalTrafficPolicy:
                                description: InternalTrafficPolicy describes how nodes
                                  distribute service traffic they receive on the ClusterIP.
                                  If set to "Local", the proxy will assume that pods
                                  only want to talk to endpoints of the service on
                                  the same node as the pod, dropping the traffic if
                                  there are no local endpoints. The default value,
                                  "Cluster", uses the standard behavior of routing
                                  to all endpoints evenly (possibly modified by topology
                                  and other features).
                                type: string
                              ipFamilyPolicy:
                                description: IPFamilyPolicy represents the dual-stack-ness
                                  requested or required by this Service. If there
                                  is no value provided, then this field will be set
                                  to SingleStack. Services can be "SingleStack" (a
                                  single IP family), "PreferDualStack" (two IP families
                                  on dual-stack configured clusters or a single IP
                                  family on single-stack clusters), or "RequireDualStack"
                                  (two IP families on dual-stack configured clusters,
                                  otherwise fail). The ipFamilies and clusterIPs fields
                                  depend on the value of this field. This field will
                                  be wiped when updating a service to type ExternalName.
                                type: string
                              loadBalancerClass:
                                description: loadBalancerClass is the class of the
                                  load balancer implementation this Service belongs
                                  to. If specified, the value of this field must be
                                  a label-style identifier, with an optional prefix,
                                  e.g. "internal-vip" or "example.com/internal-vip".
                                  Unprefixed names are reserved for end-users. This
                                  field can only be set when the Service type is 'LoadBalancer'.
                                  If not set, the default load balancer implementation
                                  is used, today this is typically done through the
                                  cloud provider integration, but should apply for
                                  any default implementation. If set, it is assumed
                                  that a load balancer implementation is watching
                                  for Services with a matching class. Any default
                                  load balancer implementation (e.g. cloud providers)
                                  should ignore Services that set this field. This
                                  field can only be set when creating or updating
                                  a Service to type 'LoadBalancer'. Once set, it can
                                  not be changed. This field will be wiped when a
                                  service is updated to a non 'LoadBalancer' type.
                                type: string
                              loadBalancerSourceRanges:
                                description: 'If specified and supported by the platform,
                                  this will restrict traffic through the cloud-provider
                                  load-balancer will be restricted to the specified
                                  client IPs. This field will be ignored if the cloud-provider
                                  does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/'
                                items:
                                  type: string
                                type: array
                              sessionAffinity:
                                description: 'Supports "ClientIP" and "None". Used
                                  to maintain session affinity. Enable client IP based
                                  session affinity. Must be ClientIP or None. Defaults
                                  to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                type: string
                              sessionAffinityConfig:
                                description: sessionAffinityConfig contains the configurations
                                  of session affinity.
                                properties:
                                  clientIP:
                                    description: clientIP contains the configurations
                                      of Client IP based session affinity.
                                    properties:
                                      timeoutSeconds:
                                        description: timeoutSeconds specifies the
                                          seconds of ClientIP type session sticky
                                          time. The value must be >0 && <=86400(for
                                          1 day) if ServiceAffinity == "ClientIP".
                                          Default value is 10800(for 3 hours).
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              type:
                                description: 'type determines how the Service is exposed.
                                  Defaults to ClusterIP. Valid options are ExternalName,
                                  ClusterIP, NodePort, and LoadBalancer. "ClusterIP"
                                  allocates a cluster-internal IP address for load-balancing
                                  to endpoints. Endpoints are determined by the selector
                                  or if that is not specified, by manual construction
                                  of an Endpoints object or EndpointSlice objects.
                                  If clusterIP is "None", no virtual IP is allocated
                                  and the endpoints are published as a set of endpoints
                                  rather than a virtual IP. "NodePort" builds on ClusterIP
                                  and allocates a port on every node which routes
                                  to the same endpoints as the clusterIP. "LoadBalancer"
                                  builds on NodePort and creates an external load-balancer
                                  (if supported in the current cloud) which routes
                                  to the same endpoints as the clusterIP. "ExternalName"
                                  aliases this service to the specified externalName.
                                  Several other fields do not apply to ExternalName
                                  services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                                type: string
                            type: object
                        type: object
                    type: object
                  replicas:
                    default: 1
                    description: Replicas of the service to run
                    format: int32
                    maximum: 32
                    minimum: 0
                    type: integer
                  resources:
                    description: Resources - Compute Resources required by this service
                      (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              noVNCProxyServiceTemplate:
                description: NoVNCProxyServiceTemplate - defines the novvncproxy service
                  dedicated for the cell.
                properties:
                  containerImage:
                    description: The service specific Container Image URL (will be
                      set to environmental default if empty)
                    type: string
                  customServiceConfig:
                    description: CustomServiceConfig - customize the service config
                      using this parameter to change service defaults, or overwrite
                      rendered information using raw OpenStack config format. The
                      content gets added to to /etc/<service>/<service>.conf.d directory
                      as custom.conf file.
                    type: string
                  defaultConfigOverwrite:
                    additionalProperties:
                      type: string
                    description: ConfigOverwrite - interface to overwrite default
                      config files like e.g. logging.conf But can also be used to
                      add additional files. Those get added to the service config
                      dir in /etc/<service> .
                    type: object
                  enabled:
                    description: Enabled - Whether NovaNoVNCProxy services should
                      be deployed and managed. If it is set to false then the related
                      NovaNoVNCProxy CR will be deleted if exists and owned by the
                      NovaCell. If it exist but not owned by the NovaCell then the
                      NovaNoVNCProxy will not be touched. If it is set to true the
                      a NovaNoVNCProxy CR will be created. If there is already a manually
                      created NovaNoVNCProxy CR with the relevant name then the cell
                      will not try to update that CR, instead the NovaCell be in error
                      state until the manually create NovaNoVNCProxy CR is deleted
                      by the operator.
                    type: boolean
                  networkAttachments:
                    description: NetworkAttachments is a list of NetworkAttachment
                      resource names to expose the services to the given network
                    items:
                      type: string
                    type: array
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector to target subset of worker nodes running
                      this service
                    type: object
                  override:
                    description: Override, provides the ability to override the generated
                      manifest of several child resources.
                    properties:
                      service:
                        description: Override configuration for the Service created
                          to serve traffic to the cluster.
                        properties:
                          endpointURL:
                            type: string
                          metadata:
                            description: EmbeddedLabelsAnnotations is an embedded
                              subset of the fields included in k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta.
                              Only labels and annotations are included.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value
                                  map stored with a resource that may be set by external
                                  tools to store and retrieve arbitrary metadata.
                                  They are not queryable and should be preserved when
                                  modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                            type: object
                          spec:
                            description: OverrideServiceSpec is a subset of the fields
                              included in https://pkg.go.dev/k8s.io/api@v0.26.6/core/v1#ServiceSpec
                              Limited to Type, SessionAffinity, LoadBalancerSourceRanges,
                              ExternalName, ExternalTrafficPolicy, SessionAffinityConfig,
                              IPFamilyPolicy, LoadBalancerClass and InternalTrafficPolicy
                            properties:
                              externalName:
                                description: externalName is the external reference
                                  that discovery mechanisms will return as an alias
                                  for this service (e.g. a DNS CNAME record). No proxying
                                  will be involved.  Must be a lowercase RFC-1123
                                  hostname (https://tools.ietf.org/html/rfc1123) and
                                  requires `type` to be "ExternalName".
                                type: string
                              externalTrafficPolicy:
                                description: externalTrafficPolicy describes how nodes
                                  distribute service traffic they receive on one of
                                  the Service's "externally-facing" addresses (NodePorts,
                                  ExternalIPs, and LoadBalancer IPs). If set to "Local",
                                  the proxy will configure the service in a way that
                                  assumes that external load balancers will take care
                                  of balancing the service traffic between nodes,
                                  and so each node will deliver traffic only to the
                                  node-local endpoints of the service, without masquerading
                                  the client source IP. (Traffic mistakenly sent to
                                  a node with no endpoints will be dropped.) The default
                                  value, "Cluster", uses the standard behavior of
                                  routing to all endpoints evenly (possibly modified
                                  by topology and other features). Note that traffic
                                  sent to an External IP or LoadBalancer IP from within
                                  the cluster will always get "Cluster" semantics,
                                  but clients sending to a NodePort from within the
                                  cluster may need to take traffic policy into account
                                  when picking a node.
                                type: string
                              internalTrafficPolicy:
                                description: InternalTrafficPolicy describes how nodes
                                  distribute service traffic they receive on the ClusterIP.
                                  If set to "Local", the proxy will assume that pods
                                  only want to talk to endpoints of the service on
                                  the same node as the pod, dropping the traffic if
                                  there are no local endpoints. The default value,
                                  "Cluster", uses the standard behavior of routing
                                  to all endpoints evenly (possibly modified by topology
                                  and other features).
                                type: string
                              ipFamilyPolicy:
                                description: IPFamilyPolicy represents the dual-stack-ness
                                  requested or required by this Service. If there
                                  is no value provided, then this field will be set
                                  to SingleStack. Services can be "SingleStack" (a
                                  single IP family), "PreferDualStack" (two IP families
                                  on dual-stack configured clusters or a single IP
                                  family on single-stack clusters), or "RequireDualStack"
                                  (two IP families on dual-stack configured clusters,
                                  otherwise fail). The ipFamilies and clusterIPs fields
                                  depend on the value of this field. This field will
                                  be wiped when updating a service to type ExternalName.
                                type: string
                              loadBalancerClass:
                                description: loadBalancerClass is the class of the
                                  load balancer implementation this Service belongs
                                  to. If specified, the value of this field must be
                                  a label-style identifier, with an optional prefix,
                                  e.g. "internal-vip" or "example.com/internal-vip".
                                  Unprefixed names are reserved for end-users. This
                                  field can only be set when the Service type is 'LoadBalancer'.
                                  If not set, the default load balancer implementation
                                  is used, today this is typically done through the
                                  cloud provider integration, but should apply for
                                  any default implementation. If set, it is assumed
                                  that a load balancer implementation is watching
                                  for Services with a matching class. Any default
                                  load balancer implementation (e.g. cloud providers)
                                  should ignore Services that set this field. This
                                  field can only be set when creating or updating
                                  a Service to type 'LoadBalancer'. Once set, it can
                                  not be changed. This field will be wiped when a
                                  service is updated to a non 'LoadBalancer' type.
                                type: string
                              loadBalancerSourceRanges:
                                description: 'If specified and supported by the platform,
                                  this will restrict traffic through the cloud-provider
                                  load-balancer will be restricted to the specified
                                  client IPs. This field will be ignored if the cloud-provider
                                  does not support the feature." More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/'
                                items:
                                  type: string
                                type: array
                              sessionAffinity:
                                description: 'Supports "ClientIP" and "None". Used
                                  to maintain session affinity. Enable client IP based
                                  session affinity. Must be ClientIP or None. Defaults
                                  to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                                type: string
                              sessionAffinityConfig:
                                description: sessionAffinityConfig contains the configurations
                                  of session affinity.
                                properties:
                                  clientIP:
                                    description: clientIP contains the configurations
                                      of Client IP based session affinity.
                                    properties:
                                      timeoutSeconds:
                                        description: timeoutSeconds specifies the
                                          seconds of ClientIP type session sticky
                                          time. The value must be >0 && <=86400(for
                                          1 day) if ServiceAffinity == "ClientIP".
                                          Default value is 10800(for 3 hours).
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              type:
                                description: 'type determines how the Service is exposed.
                                  Defaults to ClusterIP. Valid options are ExternalName,
                                  ClusterIP, NodePort, and LoadBalancer. "ClusterIP"
                                  allocates a cluster-internal IP address for load-balancing
                                  to endpoints. Endpoints are determined by the selector
                                  or if that is not specified, by manual construction
                                  of an Endpoints object or EndpointSlice objects.
                                  If clusterIP is "None", no virtual IP is allocated
                                  and the endpoints are published as a set of endpoints
                                  rather than a virtual IP. "NodePort" builds on ClusterIP
                                  and allocates a port on every node which routes
                                  to the same endpoints as the clusterIP. "LoadBalancer"
                                  builds on NodePort and creates an external load-balancer
                                  (if supported in the current cloud) which routes
                                  to the same endpoints as the clusterIP. "ExternalName"
                                  aliases this service to the specified externalName.
                                  Several other fields do not apply to ExternalName
                                  services. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                                type: string
                            type: object
                        type: object
                    type: object
                  replicas:
                    default: 1
                    description: Replicas of the service to run
                    format: int32
                    maximum: 32
                    minimum: 0
                    type: integer
                  resources:
                    description: Resources - Compute Resources required by this service
                      (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this services.
                type: object
              novaComputeTemplates:
                additionalProperties:
                  description: NovaComputeTemplate defines the input parameters specified
                    by the user to create a NovaCompute via higher level CRDs.
                  properties:
                    computeDriver:
                      description: ComputeDriver - defines which driver to use for
                        controlling virtualization
                      enum:
                      - ironic.IronicDriver
                      - fake.FakeDriver
                      type: string
                    containerImage:
                      description: ContainerImage - The service specific Container
                        Image URL (will be set to environmental default if empty)
                      type: string
                    customServiceConfig:
                      description: CustomServiceConfig - customize the service config
                        using this parameter to change service defaults, or overwrite
                        rendered information using raw OpenStack config format. The
                        content gets added to to /etc/<service>/<service>.conf.d directory
                        as custom.conf file.
                      type: string
                    defaultConfigOverwrite:
                      additionalProperties:
                        type: string
                      description: ConfigOverwrite - interface to overwrite default
                        config files like e.g. logging.conf But can also be used to
                        add additional files. Those get added to the service config
                        dir in /etc/<service> .
                      type: object
                    networkAttachments:
                      description: NetworkAttachments is a list of NetworkAttachment
                        resource names to expose the services to the given network
                      items:
                        type: string
                      type: array
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: NodeSelector to target subset of worker nodes running
                        this service. Setting here overrides any global NodeSelector
                        settings within the Nova CR.
                      type: object
                    replicas:
                      default: 1
                      description: Replicas of the service to run. For ironic.IronicDriver
                        the max replica is 1
                      format: int32
                      maximum: 32
                      minimum: 0
                      type: integer
                    resources:
                      description: Resources - Compute Resources required by this
                        service (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      properties:
                        claims:
                          description: "Claims lists the names of resources, defined
                            in spec.resourceClaims, that are used by this container.
                            \n This is an alpha field and requires enabling the DynamicResourceAllocation
                            feature gate. \n This field is immutable. It can only
                            be set for containers."
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: Name must match the name of one entry
                                  in pod.spec.resourceClaims of the Pod where this
                                  field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          type: object
                      type: object
                  required:
                  - computeDriver
                  type: object
                description: 'NovaComputeTemplates - map of nova computes template
                  with selected drivers in format compute_name: compute_template.
                  Key from map is arbitrary name for the compute. because of that
                  there is a 20 character limit on the compute name.'
                type: object
              secret:
                description: Secret is the name of the Secret instance containing
                  password information for the nova cell. This secret is expected
                  to be generated by the nova-operator based on the information passed
                  to the Nova CR.
                type: string
              serviceAccount:
                description: ServiceAccount - service account name used internally
                  to provide Nova services the default SA name
                type: string
              serviceUser:
                default: nova
                description: ServiceUser - optional username used for this service
                  to register in keystone
                type: string
            required:
            - cellDatabaseHostname
            - cellName
            - conductorServiceTemplate
            - keystoneAuthURL
            - noVNCProxyServiceTemplate
            - secret
            - serviceAccount
            type: object
          status:
            description: NovaCellStatus defines the observed state of NovaCell
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              conductorServiceReadyCount:
                description: ConductorServiceReadyCount defines the number of replicas
                  ready from nova-conductor service in the cell
                format: int32
                type: integer
              hash:
                additionalProperties:
                  type: string
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Map of hashes to track e.g. job status'
                type: object
              metadataServiceReadyCount:
                description: MetadataServiceReadyCount defines the number of replicas
                  ready from nova-metadata service in the cell
                format: int32
                type: integer
              noVNCProxyServiceReadyCount:
                description: NoVNCPRoxyServiceReadyCount defines the number of replicas
                  ready from nova-novncproxy service in the cell
                format: int32
                type: integer
              novaComputesStatuses:
                additionalProperties:
                  description: NovaComputeCellStatus defines state of NovaCompute
                    in cell
                  properties:
                    deployed:
                      description: Deployed
                      type: boolean
                    errors:
                      description: Errors
                      type: boolean
                  type: object
                description: 'NovaComputesStatuses is a map with format cell_name:
                  bool where bool tell if compute with selected name deployed successfully
                  and indicates if the compute is successfully mapped to the cell
                  in the nova_api database. When a compute is removed from the Spec
                  the operator will delete the related NovaCompute CR and then remove
                  the compute from this Status field.'
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
