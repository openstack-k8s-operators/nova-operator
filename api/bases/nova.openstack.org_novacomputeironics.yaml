---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: novacomputes.nova.openstack.org
spec:
  group: nova.openstack.org
  names:
    kind: NovaCompute
    listKind: NovaComputeList
    plural: novacomputes
    singular: novacompute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .spec.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: NovaCompute is the Schema for the NovaCompute
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NovaComputeSpec defines the desired state of NovaCompute
            properties:
              cellDatabaseHostname:
                description: CellDatabaseHostname - hostname to use when accessing
                  the cell DB
                type: string
              cellDatabaseUser:
                default: nova
                description: CellDatabaseUser - username to use when accessing the
                  cell DB
                type: string
              cellMessageBusSecretName:
                description: CellMessageBusSecretName - the name of the Secret conntaining
                  the transport URL information to use when accessing the API message
                  bus.
                type: string
              cellName:
                description: CellName is the name of the Nova Cell this novncproxy
                  belongs to.
                type: string
              containerImage:
                description: The service specific Container Image URL (will be set
                  to environmental default if empty)
                type: string
              customServiceConfig:
                description: CustomServiceConfig - customize the service config using
                  this parameter to change service defaults, or overwrite rendered
                  information using raw OpenStack config format. The content gets
                  added to to /etc/<service>/<service>.conf.d directory as custom.conf
                  file.
                type: string
              debug:
                description: Debug - enable debug for different deploy stages. If
                  an init container is used, it runs and the actual action pod gets
                  started with sleep infinity
                properties:
                  preserveJobs:
                    default: false
                    description: PreserveJobs - do not delete jobs after they finished
                      e.g. to check logs
                    type: boolean
                  stopDBSync:
                    default: false
                    description: 'StopDBSync allows stopping the init container before
                      running db sync to apply the DB schema QUESTION(gibi): Not all
                      CR will run dbsync, should we have per CR Debug struct or keep
                      this generic one and ignore fields in the controller that are
                      not applicable'
                    type: boolean
                  stopService:
                    default: false
                    description: 'StopService allows stopping the service container
                      before staring the openstack service binary QUESTION(gibi):
                      Not all CR will run a service, should we have per CR Debug struct
                      or keep this generic one and ignore fields in the controller
                      that are not applicable'
                    type: boolean
                type: object
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: ConfigOverwrite - interface to overwrite default config
                  files like e.g. logging.conf or policy.json. But can also be used
                  to add additional files. Those get added to the service config dir
                  in /etc/<service> .
                type: object
              keystoneAuthURL:
                type: string
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service
                type: object
              replicas:
                default: 1
                description: Replicas of the service to run
                format: int32
                maximum: 32
                minimum: 0
                type: integer
              resources:
                description: Resources - Compute Resources required by this service
                  (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              secret:
                description: Secret is the name of the Secret instance containing
                  password information for the NovaCompute service. This secret
                  is expected to be generated by the nova-operator based on the information
                  passed to the Nova CR.
                type: string
              serviceAccount:
                description: ServiceAccount - service account name used internally
                  to provide Nova services the default SA name
                type: string
              serviceUser:
                default: nova
                description: ServiceUser - optional username used for this service
                  to register in keystone
                type: string
            required:
            - cellDatabaseHostname
            - cellMessageBusSecretName
            - cellName
            - keystoneAuthURL
            - secret
            - serviceAccount
            type: object
          status:
            description: NovaComputeStatus defines the observed state of NovaCompute
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              readyCount:
                description: ReadyCount defines the number of replicas ready from
                  NovaCompute
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
